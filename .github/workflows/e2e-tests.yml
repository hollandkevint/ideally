name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]
        browser: [chromium, chrome]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd apps/web
          npx playwright install ${{ matrix.browser }}
          npx playwright install-deps ${{ matrix.browser }}

      - name: Setup test environment
        run: |
          cd apps/web
          cp .env.example .env.test

      - name: Set test environment variables
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_TEST }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_TEST }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_TEST }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_TEST }}
          NEXTAUTH_URL: http://localhost:3000
        run: |
          cd apps/web
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> .env.test
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env.test
          echo "SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> .env.test
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.test
          echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.test

      - name: Build application
        run: |
          cd apps/web
          npm run build

      - name: Start application server
        run: |
          cd apps/web
          npm run start &
          sleep 10
          curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:3000

      - name: Run E2E tests
        run: |
          cd apps/web
          npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }}/4
        env:
          CI: true
          PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: |
            apps/web/playwright-report/
            apps/web/test-results/
          retention-days: 30

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}-${{ matrix.shard }}
          path: apps/web/test-results/
          retention-days: 7

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: e2e-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Install Playwright
        run: |
          cd apps/web
          npx playwright install chromium

      - name: Setup test environment
        run: |
          cd apps/web
          cp .env.example .env.test

      - name: Set test environment variables
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_TEST }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_TEST }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_TEST }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_TEST }}
        run: |
          cd apps/web
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> .env.test
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env.test
          echo "SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> .env.test
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.test

      - name: Build and start application
        run: |
          cd apps/web
          npm run build
          npm run start &
          sleep 10

      - name: Run performance tests
        run: |
          cd apps/web
          npx playwright test tests/e2e/performance.spec.ts --project=chromium

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report
          path: apps/web/playwright-report/
          retention-days: 30

  demo-validation:
    name: Demo Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Install Playwright
        run: |
          cd apps/web
          npx playwright install chromium

      - name: Build and start application
        run: |
          cd apps/web
          npm run build
          npm run start &
          sleep 10

      - name: Run demo tests
        run: |
          cd apps/web
          npx playwright test tests/e2e/demo-showcase.spec.ts --project=chromium

      - name: Upload demo test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: demo-validation-report
          path: apps/web/playwright-report/
          retention-days: 30

  mobile-tests:
    name: Mobile Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Install Playwright
        run: |
          cd apps/web
          npx playwright install

      - name: Setup test environment
        run: |
          cd apps/web
          cp .env.example .env.test

      - name: Set test environment variables
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_TEST }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_TEST }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_TEST }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_TEST }}
        run: |
          cd apps/web
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> .env.test
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env.test
          echo "SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> .env.test
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.test

      - name: Build and start application
        run: |
          cd apps/web
          npm run build
          npm run start &
          sleep 10

      - name: Run mobile tests
        run: |
          cd apps/web
          npx playwright test --project="Mobile Chrome"

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-test-report
          path: apps/web/playwright-report/
          retention-days: 30

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests, demo-validation, mobile-tests]
    if: always()

    steps:
      - name: Download all test reports
        uses: actions/download-artifact@v4

      - name: Generate test summary
        run: |
          echo "# E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "✅ **E2E Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **E2E Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.performance-tests.result }}" == "success" ]; then
            echo "✅ **Performance Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Performance Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.demo-validation.result }}" == "success" ]; then
            echo "✅ **Demo Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Demo Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.mobile-tests.result }}" == "success" ]; then
            echo "✅ **Mobile Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Mobile Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- [E2E Test Reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Performance Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Demo Validation](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  deploy-gate:
    name: Deployment Gate
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests, demo-validation]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.e2e-tests.result }}" != "success" ] || \
             [ "${{ needs.performance-tests.result }}" != "success" ] || \
             [ "${{ needs.demo-validation.result }}" != "success" ]; then
            echo "❌ Tests failed - blocking deployment"
            exit 1
          fi
          echo "✅ All tests passed - deployment approved"

      - name: Create deployment check
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'E2E Test Gate',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'E2E Tests Passed',
                summary: 'All end-to-end tests passed successfully. Deployment approved.'
              }
            });

  nightly-full-suite:
    name: Nightly Full Test Suite
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Install all Playwright browsers
        run: |
          cd apps/web
          npx playwright install

      - name: Setup test environment
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_TEST }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_TEST }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_TEST }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_TEST }}
        run: |
          cd apps/web
          cp .env.example .env.test
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> .env.test
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env.test
          echo "SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> .env.test
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.test

      - name: Build and start application
        run: |
          cd apps/web
          npm run build
          npm run start &
          sleep 10

      - name: Run full test suite
        run: |
          cd apps/web
          npx playwright test --workers=2

      - name: Upload nightly results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-test-report
          path: apps/web/playwright-report/
          retention-days: 90

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Nightly E2E Tests Failed',
              body: `Nightly E2E test suite failed on ${new Date().toISOString()}\n\nRun: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'testing', 'nightly-failure']
            });